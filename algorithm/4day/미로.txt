#if 0
#include <stdio.h>
#define MAX 100
#define MIN 0

typedef struct pos {
	int y;
	int x;
}POS;

int map[MAX][MAX];
POS stack[MAX*MAX];

int main() {
	freopen("input.txt", "r", stdin);
	int dy[] = { -1, 1, 0, 0 };
	int dx[] = { 0, 0, -1, 1 };

	int ny, nx, uy, ux;
	int flag;
	int top;

	for (int testCase = 1; testCase <= 10; testCase++) {
		scanf("%d ", &flag);
		flag = 0;
		top = 0;
		for (int i = 0; i < MAX; i++) {
			for (int j = 0; j < MAX; j++) {
				scanf("%1d", &map[i][j]);
			}
		}

		stack[top].y = 1;
		stack[top++].x = 1;
		map[1][1] = 1;
		while (top) {

			uy = stack[--top].y;
			ux = stack[top].x;

			for (int i = 0; i < 4; i++) {
				ny = uy + dy[i];
				nx = ux + dx[i];

				if (!map[ny][nx]) {

					map[ny][nx] = 1;
					stack[top].y = ny;
					stack[top++].x = nx;
				}
				if (map[ny][nx] == 3) {
					flag = 1;
					break;
				}
			}
		}
		printf("#%d %d\n", testCase, flag);
	}
	return 0;
}
#endif

#if 1
#include <stdio.h>
#define MAX 100
#define MIN 0

typedef struct pos {
	int y;
	int x;
}POS;

char map[MAX][MAX+1];
POS stack[MAX*MAX];

int main() {
	freopen("input.txt", "r", stdin);
	int dy[] = { -1, 1, 0, 0 };
	int dx[] = { 0, 0, -1, 1 };

	int ny, nx, uy, ux;
	int flag;
	int top;

	for (int testCase = 1; testCase <= 10; testCase++) {
		scanf("%d ", &flag);
		flag = 0;
		top = 0;
		for (int i = 0; i < MAX; i++) {
			scanf("%s", map[i]);
		}

		stack[top].y = 1;
		stack[top++].x = 1;
		map[1][1] = '1';
		while (top) {

			uy = stack[--top].y;
			ux = stack[top].x;

			for (int i = 0; i < 4; i++) {
				ny = uy + dy[i];
				nx = ux + dx[i];

				if (map[ny][nx]=='0') {

					map[ny][nx] = 1;
					stack[top].y = ny;
					stack[top++].x = nx;
				}
				if (map[ny][nx] == '3') {
					flag = 1;
					break;
				}
			}
		}
		printf("#%d %d\n", testCase, flag);
	}
	return 0;
}
#endif