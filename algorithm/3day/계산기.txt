#include<stdio.h>
#define MAX 1000
int stack[MAX];
char data[MAX];
char postStr[MAX];

int priority(char c) {
	if (c == '*' || c == '/') {
		return 1;
	}
	else if (c == '+' || c == '-') {
		return 2;
	}
	else if (c == '(') {
		return 3;
	}
}


int main() {
	freopen("input.txt", "r", stdin);
	int len;
	int postLen;
	int top = 0;
	char peekT;
	int a, b;
	for (int testCase = 1; testCase <= 10; testCase++) {
		postLen = 0;
		scanf("%d %s", &len, data);

		for (int i = 0; i < len; i++) {
//			if (data[i] >= '0' && data[i] <= '9') {
			if (data[i] >= '0') {
					postStr[postLen++] = data[i];
			}
			else
			{
				if (data[i] == '(') {
					stack[top++] = data[i];
				}
				else if (data[i] == ')') {
					peekT = stack[top - 1];

					while (peekT != '(') {
						postStr[postLen++] = stack[--top];
						peekT = stack[top - 1];
					}
					stack[--top];
				}
				else {
					peekT = stack[top - 1];

					while ((priority(data[i]) >= priority(peekT)) && top) {
						postStr[postLen++] = stack[--top];
						peekT = stack[top - 1];

					}

					stack[top++] = data[i];
				}
			}
		}


		while (top) {
			postStr[postLen++] = stack[--top];
		}


		for (int i = 0; i < postLen; i++) {

//			if (postStr[i] >= '0' && postStr[i] <= '9') {
			if (postStr[i] >= '0') {
					stack[top++] = postStr[i] - 48;
			}
			else if (postStr[i] == '*')
			{
				a = stack[--top];
				b = stack[--top];
				stack[top++] = b * a;
			}
			else if (postStr[i] == '/')
			{
				a = stack[--top];
				b = stack[--top];
				stack[top++] = b / a;
			}
			else if (postStr[i] == '+')
			{
				a = stack[--top];
				b = stack[--top];
				stack[top++] = b + a;
			}
			else if (postStr[i] == '-')
			{
				a = stack[--top];
				b = stack[--top];
				stack[top++] = b - a;
			}
		}

		printf("#%d %d\n", testCase, stack[--top]);
	}

	return 0;
}